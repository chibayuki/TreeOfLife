<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Copyright © 2021 chibayuki@foxmail.com

TreeOfLife
Version 1.0.1100.1000.M11.210405-0000

This file is part of TreeOfLife
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 《ContextMenu 样式和模板》 -->
    <!-- https://docs.microsoft.com/zh-cn/dotnet/desktop/wpf/controls/contextmenu-styles-and-templates?view=netframeworkdesktop-4.8 -->

    <!-- 《Menu 样式和模板》 -->
    <!-- https://docs.microsoft.com/zh-cn/dotnet/desktop/wpf/controls/menu-styles-and-templates?view=netframeworkdesktop-4.8 -->

    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!-- HSL(215,0,90) -->
    <SolidColorBrush x:Key="ContextMenu.Background" Color="#FFE6E6E6"/>
    <!-- HSL(215,0,75) -->
    <SolidColorBrush x:Key="ContextMenu.BorderBrush" Color="#FFBFBFBF"/>
    
    <!-- HSL(215,0,75) -->
    <SolidColorBrush x:Key="Separator.BorderBrush" Color="#FFBFBFBF"/>
    
    <SolidColorBrush x:Key="MenuItem.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="MenuItem.Static.BorderBrush" Color="Transparent"/>
    <!-- HSL(215,50,30) -->
    <SolidColorBrush x:Key="MenuItem.Static.Foreground" Color="#FF264673"/>
    
    <!-- HSL(215,50,50) -->
    <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#FF4075BF"/>
    <SolidColorBrush x:Key="MenuItem.Highlight.BorderBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="MenuItem.Highlight.Foreground" Color="White"/>
    
    <SolidColorBrush x:Key="MenuItem.Disabled.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="MenuItem.Disabled.BorderBrush" Color="Transparent"/>
    <!-- HSL(215,0,40) -->
    <SolidColorBrush x:Key="MenuItem.Disabled.Foreground" Color="#FF666666"/>

    <DropShadowEffect x:Key="MenuItem.Border.Effect" ShadowDepth="1" Direction="270" Opacity="0.5" BlurRadius="5"/>

    <!-- ContextMenu Style -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Padding="0,6,0,6" CornerRadius="3" BorderThickness="1" Background="{StaticResource ContextMenu.Background}" BorderBrush="{StaticResource ContextMenu.BorderBrush}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="Border" Property="Margin" Value="4,4,6,6"/>
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="1" Direction="315" Opacity="0.5" BlurRadius="5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Separator Style -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,6,0,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderThickness="1" BorderBrush="{StaticResource Separator.BorderBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader MenuItem Template -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Padding="3,6,3,6" CornerRadius="3" Background="{StaticResource MenuItem.Static.Background}" BorderBrush="{StaticResource MenuItem.Static.BorderBrush}">
            <Grid>
                <ContentPresenter VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Margin="6,0,6,0"/>
                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" Background="{StaticResource ContextMenu.Background}" BorderBrush="{StaticResource ContextMenu.BorderBrush}">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItem.Highlight.Background}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.BorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlight.Foreground}"/>
                <Setter TargetName="Border" Property="Effect" Value="{StaticResource MenuItem.Border.Effect}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItem.Disabled.Background}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuItem.Disabled.BorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MenuItem.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem MenuItem Template -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Padding="3,6,3,6" CornerRadius="3" Background="{StaticResource MenuItem.Static.Background}" BorderBrush="{StaticResource MenuItem.Static.BorderBrush}">
            <Grid>
                <ContentPresenter VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Margin="6,0,6,0"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItem.Highlight.Background}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.BorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlight.Foreground}"/>
                <Setter TargetName="Border" Property="Effect" Value="{StaticResource MenuItem.Border.Effect}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource MenuItem.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader MenuItem Template -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Padding="3,6,3,6" CornerRadius="3" Background="{StaticResource MenuItem.Static.Background}" BorderBrush="{StaticResource MenuItem.Static.BorderBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Margin="6,0,6,0"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="12,0,0,0" DockPanel.Dock="Right"/>
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{StaticResource GlyphColor}"/>
                    </Path.Fill>
                </Path>
                <Popup x:Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" Background="{StaticResource ContextMenu.Background}" BorderBrush="{StaticResource ContextMenu.BorderBrush}">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItem.Highlight.Background}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.BorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlight.Foreground}"/>
                <Setter TargetName="Border" Property="Effect" Value="{StaticResource MenuItem.Border.Effect}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItem.Disabled.Background}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuItem.Disabled.BorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MenuItem.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem MenuItem Template -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Padding="3,6,3,6" CornerRadius="3" Background="{StaticResource MenuItem.Static.Background}" BorderBrush="{StaticResource MenuItem.Static.BorderBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <Border x:Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1" Background="{StaticResource ContextMenu.Background}" BorderBrush="{StaticResource ContextMenu.BorderBrush}">
                    <Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">
                        <Path.Stroke>
                            <SolidColorBrush Color="{StaticResource GlyphColor}"/>
                        </Path.Stroke>
                    </Path>
                </Border>
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Margin="6,0,6,0"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="12,0,0,0" DockPanel.Dock="Right"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItem.Highlight.Background}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.BorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlight.Foreground}"/>
                <Setter TargetName="Border" Property="Effect" Value="{StaticResource MenuItem.Border.Effect}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItem.Disabled.Background}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuItem.Disabled.BorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MenuItem.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource MenuItem.Static.Foreground}"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontStretch" Value="Normal"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
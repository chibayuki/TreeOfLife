<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Copyright © 2021 chibayuki@foxmail.com

TreeOfLife
Version 1.0.1322.1000.M13.210925-1400

This file is part of TreeOfLife
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="TextBox.Static.Background" Color="White"/>
    <SolidColorBrush x:Key="TextBox.Static.BorderBrush" Color="Gray"/>
    <SolidColorBrush x:Key="TextBox.Static.Foreground" Color="Black"/>

    <SolidColorBrush x:Key="TextBox.MouseOver.Background"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.BorderBrush"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Foreground"/>

    <SolidColorBrush x:Key="TextBox.Focused.Background"/>
    <SolidColorBrush x:Key="TextBox.Focused.BorderBrush"/>
    <SolidColorBrush x:Key="TextBox.Focused.Foreground"/>

    <DropShadowEffect x:Key="TextBox.MouseOver.Effect" BlurRadius="5" Opacity="0.25" ShadowDepth="0"/>
    <DropShadowEffect x:Key="TextBox.Focused.Effect" BlurRadius="5" Opacity="0.25" ShadowDepth="0"/>
    
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBox.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <Border x:Name="border_Top" CornerRadius="3" BorderThickness="0,1,0,0" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True" Visibility="Collapsed"/>
                        <Border x:Name="border_Bottom" CornerRadius="3" BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TextBox.MouseOver.Background}"/>
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource TextBox.MouseOver.Effect}"/>
                            <Setter TargetName="border_Top" Property="BorderBrush" Value="{DynamicResource TextBox.MouseOver.BorderBrush}"/>
                            <Setter TargetName="border_Bottom" Property="BorderBrush" Value="{DynamicResource TextBox.MouseOver.BorderBrush}"/>
                            <Setter TargetName="border_Top" Property="BorderThickness" Value="0,2,0,0"/>
                            <Setter TargetName="border_Bottom" Property="BorderThickness" Value="0,0,0,2"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBox.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TextBox.Focused.Background}"/>
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource TextBox.Focused.Effect}"/>
                            <Setter TargetName="border_Top" Property="BorderBrush" Value="{DynamicResource TextBox.Focused.BorderBrush}"/>
                            <Setter TargetName="border_Bottom" Property="BorderBrush" Value="{DynamicResource TextBox.Focused.BorderBrush}"/>
                            <Setter TargetName="border_Top" Property="BorderThickness" Value="0,2,0,0"/>
                            <Setter TargetName="border_Bottom" Property="BorderThickness" Value="0,0,0,2"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBox.Focused.Foreground}"/>
                        </Trigger>
                        <Trigger Property="AcceptsReturn" Value="True">
                            <Setter TargetName="border_Top" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="TextWrapping" Value="Wrap">
                            <Setter TargetName="border_Top" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                    <Condition Property="IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="AcceptsReturn" Value="True">
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            </Trigger>
            <Trigger Property="TextWrapping" Value="Wrap">
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="AcceptsReturn" Value="True"/>
                    <Condition Property="TextWrapping" Value="NoWrap"/>
                </MultiTrigger.Conditions>
                <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>
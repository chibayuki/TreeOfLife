<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Copyright © 2021 chibayuki@foxmail.com

TreeOfLife
Version 1.0.1322.1000.M13.210925-1400

This file is part of TreeOfLife
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="White"/>
    <SolidColorBrush x:Key="RadioButton.Static.BorderBrush" Color="Gray"/>
    <SolidColorBrush x:Key="RadioButton.Static.Foreground" Color="Gray"/>
    <SolidColorBrush x:Key="RadioButton.Static.Glyph"/>

    <SolidColorBrush x:Key="RadioButton.MouseOver.Background"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.BorderBrush"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph"/>

    <SolidColorBrush x:Key="RadioButton.Pressed.Background"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.BorderBrush"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph"/>

    <SolidColorBrush x:Key="RadioButton.Checked.Background" Color="Black"/>
    <SolidColorBrush x:Key="RadioButton.Checked.BorderBrush" Color="Black"/>
    <SolidColorBrush x:Key="RadioButton.Checked.Glyph" Color="White"/>

    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="LightGray"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.BorderBrush" Color="Gray"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="DimGray"/>

    <DropShadowEffect x:Key="RadioButton.MouseOver.Effect" BlurRadius="3" Direction="315" Opacity="0.3" ShadowDepth="1"/>
    <DropShadowEffect x:Key="RadioButton.Pressed.Effect" BlurRadius="3" Direction="315" Opacity="0.3" ShadowDepth="1"/>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource RadioButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.Static.BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource RadioButton.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid" Width="18" Height="18">
                                <Ellipse x:Name="optionMark" Fill="{DynamicResource RadioButton.Static.Glyph}" Margin="4" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="6,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{DynamicResource RadioButton.MouseOver.Background}"/>
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource RadioButton.MouseOver.BorderBrush}"/>
                            <Setter TargetName="radioButtonBorder" Property="Effect" Value="{StaticResource RadioButton.MouseOver.Effect}"/>
                            <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource RadioButton.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{DynamicResource RadioButton.Pressed.Background}"/>
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource RadioButton.Pressed.BorderBrush}"/>
                            <Setter TargetName="radioButtonBorder" Property="Effect" Value="{StaticResource RadioButton.Pressed.Effect}"/>
                            <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource RadioButton.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{DynamicResource RadioButton.Disabled.Background}"/>
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource RadioButton.Disabled.BorderBrush}"/>
                            <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource RadioButton.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="radioButtonBorder" Property="Background" Value="{DynamicResource RadioButton.Checked.Background}"/>
                                <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource RadioButton.Checked.BorderBrush}"/>
                                <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource RadioButton.Checked.Glyph}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsChecked" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="radioButtonBorder" Property="Background" Value="{DynamicResource RadioButton.Checked.Background}"/>
                                <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource RadioButton.Checked.BorderBrush}"/>
                                <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource RadioButton.Checked.Glyph}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>